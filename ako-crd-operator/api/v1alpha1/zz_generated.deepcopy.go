//go:build !ignore_autogenerated

/*
Copyright 2019-2025 VMware, Inc.
All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationProfile) DeepCopyInto(out *ApplicationProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationProfile.
func (in *ApplicationProfile) DeepCopy() *ApplicationProfile {
	if in == nil {
		return nil
	}
	out := new(ApplicationProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationProfileList) DeepCopyInto(out *ApplicationProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]ApplicationProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationProfileList.
func (in *ApplicationProfileList) DeepCopy() *ApplicationProfileList {
	if in == nil {
		return nil
	}
	out := new(ApplicationProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *ApplicationProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationProfileSpec) DeepCopyInto(out *ApplicationProfileSpec) {
	*out = *in
	if in.HTTPProfile != nil {
		in, out := &in.HTTPProfile, &out.HTTPProfile
		*out = new(HTTPApplicationProfile)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationProfileSpec.
func (in *ApplicationProfileSpec) DeepCopy() *ApplicationProfileSpec {
	if in == nil {
		return nil
	}
	out := new(ApplicationProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ApplicationProfileStatus) DeepCopyInto(out *ApplicationProfileStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ApplicationProfileStatus.
func (in *ApplicationProfileStatus) DeepCopy() *ApplicationProfileStatus {
	if in == nil {
		return nil
	}
	out := new(ApplicationProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendHealthMonitor) DeepCopyInto(out *BackendHealthMonitor) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendHealthMonitor.
func (in *BackendHealthMonitor) DeepCopy() *BackendHealthMonitor {
	if in == nil {
		return nil
	}
	out := new(BackendHealthMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *BackendPKIProfile) DeepCopyInto(out *BackendPKIProfile) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new BackendPKIProfile.
func (in *BackendPKIProfile) DeepCopy() *BackendPKIProfile {
	if in == nil {
		return nil
	}
	out := new(BackendPKIProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPApplicationProfile) DeepCopyInto(out *HTTPApplicationProfile) {
	*out = *in
	if in.TrueClientIP != nil {
		in, out := &in.TrueClientIP, &out.TrueClientIP
		*out = new(TrueClientIPConfig)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPApplicationProfile.
func (in *HTTPApplicationProfile) DeepCopy() *HTTPApplicationProfile {
	if in == nil {
		return nil
	}
	out := new(HTTPApplicationProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HTTPMonitor) DeepCopyInto(out *HTTPMonitor) {
	*out = *in
	if in.HTTPResponseCode != nil {
		in, out := &in.HTTPResponseCode, &out.HTTPResponseCode
		*out = make([]HTTPResponseCode, len(*in))
		copy(*out, *in)
	}
	if in.MaintenanceCode != nil {
		in, out := &in.MaintenanceCode, &out.MaintenanceCode
		*out = make([]uint32, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HTTPMonitor.
func (in *HTTPMonitor) DeepCopy() *HTTPMonitor {
	if in == nil {
		return nil
	}
	out := new(HTTPMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthMonitor) DeepCopyInto(out *HealthMonitor) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthMonitor.
func (in *HealthMonitor) DeepCopy() *HealthMonitor {
	if in == nil {
		return nil
	}
	out := new(HealthMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthMonitor) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthMonitorInfo) DeepCopyInto(out *HealthMonitorInfo) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthMonitorInfo.
func (in *HealthMonitorInfo) DeepCopy() *HealthMonitorInfo {
	if in == nil {
		return nil
	}
	out := new(HealthMonitorInfo)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthMonitorList) DeepCopyInto(out *HealthMonitorList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]HealthMonitor, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthMonitorList.
func (in *HealthMonitorList) DeepCopy() *HealthMonitorList {
	if in == nil {
		return nil
	}
	out := new(HealthMonitorList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *HealthMonitorList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthMonitorSpec) DeepCopyInto(out *HealthMonitorSpec) {
	*out = *in
	if in.Authentication != nil {
		in, out := &in.Authentication, &out.Authentication
		*out = new(HealthMonitorInfo)
		**out = **in
	}
	if in.TCP != nil {
		in, out := &in.TCP, &out.TCP
		*out = new(TCPMonitor)
		**out = **in
	}
	if in.HTTPMonitor != nil {
		in, out := &in.HTTPMonitor, &out.HTTPMonitor
		*out = new(HTTPMonitor)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthMonitorSpec.
func (in *HealthMonitorSpec) DeepCopy() *HealthMonitorSpec {
	if in == nil {
		return nil
	}
	out := new(HealthMonitorSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *HealthMonitorStatus) DeepCopyInto(out *HealthMonitorStatus) {
	*out = *in
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new HealthMonitorStatus.
func (in *HealthMonitorStatus) DeepCopy() *HealthMonitorStatus {
	if in == nil {
		return nil
	}
	out := new(HealthMonitorStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PKIProfile) DeepCopyInto(out *PKIProfile) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PKIProfile.
func (in *PKIProfile) DeepCopy() *PKIProfile {
	if in == nil {
		return nil
	}
	out := new(PKIProfile)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PKIProfile) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PKIProfileList) DeepCopyInto(out *PKIProfileList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]PKIProfile, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PKIProfileList.
func (in *PKIProfileList) DeepCopy() *PKIProfileList {
	if in == nil {
		return nil
	}
	out := new(PKIProfileList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *PKIProfileList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PKIProfileSpec) DeepCopyInto(out *PKIProfileSpec) {
	*out = *in
	if in.CACerts != nil {
		in, out := &in.CACerts, &out.CACerts
		*out = make([]*SSLCertificate, len(*in))
		for i := range *in {
			if (*in)[i] != nil {
				in, out := &(*in)[i], &(*out)[i]
				*out = new(SSLCertificate)
				(*in).DeepCopyInto(*out)
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PKIProfileSpec.
func (in *PKIProfileSpec) DeepCopy() *PKIProfileSpec {
	if in == nil {
		return nil
	}
	out := new(PKIProfileSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *PKIProfileStatus) DeepCopyInto(out *PKIProfileStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]v1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.LastUpdated != nil {
		in, out := &in.LastUpdated, &out.LastUpdated
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new PKIProfileStatus.
func (in *PKIProfileStatus) DeepCopy() *PKIProfileStatus {
	if in == nil {
		return nil
	}
	out := new(PKIProfileStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteBackendExtension) DeepCopyInto(out *RouteBackendExtension) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	out.Status = in.Status
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteBackendExtension.
func (in *RouteBackendExtension) DeepCopy() *RouteBackendExtension {
	if in == nil {
		return nil
	}
	out := new(RouteBackendExtension)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteBackendExtension) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteBackendExtensionList) DeepCopyInto(out *RouteBackendExtensionList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]RouteBackendExtension, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteBackendExtensionList.
func (in *RouteBackendExtensionList) DeepCopy() *RouteBackendExtensionList {
	if in == nil {
		return nil
	}
	out := new(RouteBackendExtensionList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RouteBackendExtensionList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteBackendExtensionSpec) DeepCopyInto(out *RouteBackendExtensionSpec) {
	*out = *in
	if in.HealthMonitor != nil {
		in, out := &in.HealthMonitor, &out.HealthMonitor
		*out = make([]BackendHealthMonitor, len(*in))
		copy(*out, *in)
	}
	if in.EnableBackendSSL != nil {
		in, out := &in.EnableBackendSSL, &out.EnableBackendSSL
		*out = new(bool)
		**out = **in
	}
	if in.PKIProfile != nil {
		in, out := &in.PKIProfile, &out.PKIProfile
		*out = new(BackendPKIProfile)
		**out = **in
	}
	if in.HostCheckEnabled != nil {
		in, out := &in.HostCheckEnabled, &out.HostCheckEnabled
		*out = new(bool)
		**out = **in
	}
	if in.DomainName != nil {
		in, out := &in.DomainName, &out.DomainName
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteBackendExtensionSpec.
func (in *RouteBackendExtensionSpec) DeepCopy() *RouteBackendExtensionSpec {
	if in == nil {
		return nil
	}
	out := new(RouteBackendExtensionSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RouteBackendExtensionStatus) DeepCopyInto(out *RouteBackendExtensionStatus) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RouteBackendExtensionStatus.
func (in *RouteBackendExtensionStatus) DeepCopy() *RouteBackendExtensionStatus {
	if in == nil {
		return nil
	}
	out := new(RouteBackendExtensionStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *SSLCertificate) DeepCopyInto(out *SSLCertificate) {
	*out = *in
	if in.Certificate != nil {
		in, out := &in.Certificate, &out.Certificate
		*out = new(string)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new SSLCertificate.
func (in *SSLCertificate) DeepCopy() *SSLCertificate {
	if in == nil {
		return nil
	}
	out := new(SSLCertificate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TCPMonitor) DeepCopyInto(out *TCPMonitor) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TCPMonitor.
func (in *TCPMonitor) DeepCopy() *TCPMonitor {
	if in == nil {
		return nil
	}
	out := new(TCPMonitor)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TrueClientIPConfig) DeepCopyInto(out *TrueClientIPConfig) {
	*out = *in
	if in.Headers != nil {
		in, out := &in.Headers, &out.Headers
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TrueClientIPConfig.
func (in *TrueClientIPConfig) DeepCopy() *TrueClientIPConfig {
	if in == nil {
		return nil
	}
	out := new(TrueClientIPConfig)
	in.DeepCopyInto(out)
	return out
}
